server.port=8090

spring.application.name=API-GATEWAY

spring.cloud.gateway.default-filters=TokenRelay

spring.cloud.gateway.routes[0].id = PHOTOS-R-SERVER
spring.cloud.gateway.routes[0].uri = lb://PHOTOS-R-SERVER
spring.cloud.gateway.routes[0].predicates[0] = Path=/api/photos/**
spring.cloud.gateway.routes[0].filters[0] = RemoveRequestHeader=Cookie

spring.cloud.gateway.routes[1].id = ALBUMS-R-SERVER
spring.cloud.gateway.routes[1].uri = lb://ALBUMS-R-SERVER
spring.cloud.gateway.routes[1].predicates[0] = Path=/api/albums/**
spring.cloud.gateway.routes[1].filters[0] = RemoveRequestHeader=Cookie


#spring.cloud.gateway.globalcors.cors-configurations.allowedOrigins.[/**]="http://localhost:4200"
#spring.cloud.gateway.globalcors.cors-configurations.allowedMethods.[/**]=GET,POST,PUT,DELETE
#spring.cloud.gateway.globalcors.cors-configurations.allowedHeaders.[/**]="*"

eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/ 
eureka.instance.hostname=localhost

spring.main.allow-bean-definition-overriding=true

spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/auth/realms/photoalbum

# Oauth2 client registration properties
spring.security.oauth2.client.registration.photo-album-client.client-id=photo-album-client
spring.security.oauth2.client.registration.photo-album-client.client-secret=4b6af63d-1804-4749-ac9c-2821e02b73b6
spring.security.oauth2.client.registration.photo-album-client.scope=openid, profile, roles
spring.security.oauth2.client.registration.photo-album-client.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.photo-album-client.redirect-uri=http://localhost:4200/login/oauth2/code/photo-album-client

#Oauth2 provider properties
spring.security.oauth2.client.provider.photo-album-client.authorization-uri=http://localhost:8080/auth/realms/photoalbum/protocol/openid-connect/auth
spring.security.oauth2.client.provider.photo-album-client.token-uri=http://localhost:8080/auth/realms/photoalbum/protocol/openid-connect/token
spring.security.oauth2.client.provider.photo-album-client.jwk-set-uri=http://localhost:8080/auth/realms/photoalbum/protocol/openid-connect/certs
spring.security.oauth2.client.provider.photo-album-client.user-info-uri=http://localhost:8080/auth/realms/photoalbum/protocol/openid-connect/userinfo
spring.security.oauth2.client.provider.photo-album-client.user-name-attribute=preferred_username

